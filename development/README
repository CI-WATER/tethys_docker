# Tethys Development Dockerfiles
# Author: Nathan Swain
# Description: These Dockerfiles can be used to build images
# for the tethys apps development environment.

# REQUIREMENTS

* Ubuntu >= 12.04 other docker-compatible Linux
* Docker (see https://www.docker.io/gettingstarted/#h_installation)
* Internet connection

# EXPLANATION

There are two Docker containers that are needed to deploy the Tethys development environment: tethys_dev and tethys_dev_data. The tethys_dev container runs CKAN with all the plugins for Tethys Apps installed to provide a development environment for Tethys app development. The tethys_dev_data container houses all of the data dependencies for the Tethys Software Framework (postgresql, filestore, datastore, solr, and tethys apps databases). This allows user data, app data, and datasets to be persisted despite the tethys_dev container being updated frequently.

There are two methods for getting the tethys docker container images: Pull images or build from source. You may want to build from source if you want the very latest version of the Tethys Apps plugin.

# INSTALL FROM IMAGES

1. Install Docker, if not installed already (see https://www.docker.io/gettingstarted/#h_installation)

2. Pull images from Docker Public Repository:

sudo docker pull swainn/tethys_dev swainn/tethys_dev_data


# BUILD FROM SOURCE

1. Create working directory:

mkdir ~/tethysdev

NOTE: This directory can be located wherever you would like, but be sure to use your custom path in the following steps if you don't use the suggested directory.

2. Retrive the tethys_docker source repository:

cd ~/tethysdev
git clone https://swainn@bitbucket.org/swainn/tethys_docker.git

3. Build container images from docker files:

cd ~/tethysdev/tethys_docker/development/tethys_dev_data
sudo docker build -t swainn/tethys_dev_data .

cd ~/tethysdev/tethys_docker/development/tethys_dev
sudo docker build -t swainn/tethys_dev .

HINT: Often the build will fail due connection problems during apt-get update. It may be necessary to run the docker build command MANY times before it finally succeeds.

4. Copy the tethys_dev client

cp ~/tethysdev/tethys_docker/development/tethys_dev_client/tethysdev /usr/bin/

# CREATE CONTAINERS

After you have the docker images (either built from source of pulled from the public repository), you will need to use the Docker "run" command to create the containers:

sudo docker run -d -p 5555:5432 -p 8080:8080 --name tethys_db swainn/tethys_dev_data
sudo docker run -i -t -p 5000:5000 --link tethys_db:data --volumes-from tethys_db -v <apps_working_directory>:/usr/lib/ckan/apps_projects:rw --name tethys_dev swainn/tethys_dev

Replace <apps_working_directory> with the directory where you will create your app projects. The docker container instances are assigned names: tethys_db for the tethys_data_dev container and tethys_dev for the tethys_dev container. Stop the tethys_dev container using the key combination ctrl-C. The tethys_dev_data container can be stopped using the following command:

sudo docker stop tethys_db

# START AND STOP

After the containers have been created the first time, they can be started using the following commands:

sudo docker start tethys_db
sudo docker start -a -i tethys_dev

NOTE: The containers must be started in this order. The tethys_dev container depends on the tethys_db container running.

The "a" and "i" options allow you to see the output from the server that is running CKAN and Tethys apps. This is useful for debugging. To stop the tethys_dev container, use the key combination ctrl-C as before. To stop the tethys_db container use:

sudo docker stop tethys_db

# DATA INTROSPECTION

You can inspect the CKAN and TETHYS database using a PostgreSQL client such as PGAdminIII. To do so, start the tethys_db container and use the following credentials to connect:

Host: localhost
Port: 5555
Username: tethys
Password: pass
Database: tethys

The tethys user is a superuser for the database. The various data directories and log directories can be inspected by creating a new docker container that binds to the volumes of tethys_db:

sudo docker run --rm -i -t --volumes-from tethys_db ubuntu bash

Useful directories include:
/var/lib/ckan/default	(FileStore data directory)
/etc/solr/conf		(Solr configuration)
/var/log/supervisor	(Solr/Jetty and PostgreSQL logs)

# TETHYS DEV CLIENT




