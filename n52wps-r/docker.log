Step 0 : FROM ubuntu:14.04
 ---> 6d4946999d4f
Step 1 : MAINTAINER Nathan Swain nathan.swain@byu.net
 ---> Using cache
 ---> 5afe6301c6f6
Step 2 : RUN apt-get update -y && apt-get upgrade -y
 ---> Using cache
 ---> 597e845dc963
Step 3 : RUN apt-get install -y wget sudo ssh unzip vim
 ---> Using cache
 ---> c6a66cb5ef5e
Step 4 : RUN apt-get install -y      build-essential      flex make bison gcc libgcc1 g++ cmake ccache      python python-dev      python-opengl      python-wxversion python-wxtools python-wxgtk2.8      python-dateutil libgsl0-dev python-numpy      wx2.8-headers wx-common libwxgtk2.8-dev libwxgtk2.8-dbg      libwxbase2.8-dev  libwxbase2.8-dbg      libncurses5-dev      zlib1g-dev gettext      libtiff-dev libpnglite-dev      libcairo2 libcairo2-dev      sqlite3 libsqlite3-dev      libpq-dev      libreadline6 libreadline6-dev libfreetype6-dev      libfftw3-3 libfftw3-dev      libboost-thread-dev libboost-program-options-dev liblas-c-dev      resolvconf      libjasper-dev      subversion      libav-tools libavutil-dev ffmpeg2theora      libffmpegthumbnailer-dev      libavcodec-dev      libxmu-dev      libavformat-dev libswscale-dev      checkinstall      libglu1-mesa-dev libxmu-dev      libmysqlclient-dev      netcdf-bin libnetcdf-dev
 ---> Using cache
 ---> d94468de8b45
Step 5 : ENV PROCESSORS 4
 ---> Using cache
 ---> 961376fb6f23
Step 6 : WORKDIR /usr/local/src
 ---> Using cache
 ---> 2c83d2da23b3
Step 7 : RUN svn co http://svn.osgeo.org/metacrs/proj/branches/4.8/proj/ &&    wget http://download.osgeo.org/proj/proj-datumgrid-1.5.zip &&    unzip -d proj/nad -o proj-datumgrid-1.5.zip &&    rm proj-datumgrid-1.5.zip &&    svn co https://svn.osgeo.org/grass/grass/branches/releasebranch_7_0 grass70_release &&    svn co https://svn.osgeo.org/gdal/branches/1.11/gdal gdal_stable &&    wget http://download.osgeo.org/geos/geos-3.4.2.tar.bz2 &&    bunzip2 geos-3.4.2.tar.bz2 &&    tar xvf geos-3.4.2.tar &&    rm geos-3.4.2.tar
 ---> Using cache
 ---> 0d9cacede1ec
Step 8 : WORKDIR /usr/local/src/proj
 ---> Using cache
 ---> ce2cc46f9afd
Step 9 : RUN ./configure && make -j$PROCESSORS && make install && ldconfig
 ---> Using cache
 ---> 384e04efd25a
Step 10 : WORKDIR /usr/local/src/geos-3.4.2
 ---> Using cache
 ---> 91e360176ff1
Step 11 : RUN ./configure && make -j$PROCESSORS && make install && ldconfig
 ---> Using cache
 ---> ee5943d5b98c
Step 12 : WORKDIR /usr/local/src/gdal_stable
 ---> Using cache
 ---> d6b56ef89e77
Step 13 : RUN CFLAGS="-g -Wall" LDFLAGS="-s" ./configure        --with-png=internal        --with-libtiff=internal        --with-geotiff=internal        --with-jpeg=internal        --with-gif=internal        --with-ecw=no        --with-expat=yes        --with-sqlite3=yes        --with-geos=yes        --with-python        --with-libz=internal        --with-netcdf        --with-threads=yes        --without-grass        --without-ogdi        --with-pg=/usr/bin/pg_config        --with-xerces=yes &&    make -j$PROCESSORS && make install && ldconfig &&    apt-get install -y python-gdal
 ---> Using cache
 ---> a2ea198a3ef4
Step 14 : WORKDIR /usr/local/src/grass70_release
 ---> Using cache
 ---> 5fdeaf5352a1
Step 15 : RUN CFLAGS="-O2 -Wall" LDFLAGS="-s" ./configure        --enable-largefile=yes        --with-nls        --with-cxx        --with-readline        --with-pthread        --with-proj-share="/usr/local/share/proj/"        --with-geos="/usr/local/bin/geos-config"        --with-wxwidgets        --with-cairo        --with-opengl-libs=/usr/include/GL        --with-freetype=yes --with-freetype-includes="/usr/include/freetype2/"        --with-postgres=yes --with-postgres-includes="/usr/include/postgresql"        --with-sqlite=yes        --with-mysql=yes --with-mysql-includes="/usr/include/mysql"        --with-odbc=no        --with-liblas=yes --with-liblas-config="/usr/bin/liblas-config"        --with-netcdf="/usr/bin/nc-config" &&    make -j$PROCESSORS && make install && ldconfig
 ---> Using cache
 ---> eb81ae18e6d9
Step 16 : RUN apt-get install -y r-base
 ---> Using cache
 ---> 0a87f467564b
Step 17 : RUN apt-get install -y r-base-dev
 ---> Using cache
 ---> 56144741240b
Step 18 : RUN R --version
 ---> Using cache
 ---> dbdf25337380
Step 19 : CMD RScript start.R
 ---> Using cache
 ---> 717d92b53245
Step 20 : RUN wget http://cran.r-project.org/src/contrib/Rserve_1.7-3.tar.gz
 ---> Using cache
 ---> 280804579e3c
Step 21 : RUN R CMD INSTALL Rserve_1.7-3.tar.gz
 ---> Using cache
 ---> 7fe4399df0f0
Step 22 : RUN apt-get install -y openjdk-7-jre
 ---> Using cache
 ---> 753175b50725
Step 23 : RUN apt-get install -y tomcat7 supervisor
 ---> Using cache
 ---> 48fbca4f97d3
Step 24 : RUN rm -r /var/lib/tomcat7/webapps/ROOT
 ---> Using cache
 ---> 204506c37b3b
Step 25 : COPY supervisord.conf /etc/supervisor/conf.d/
 ---> Using cache
 ---> 2460fb747db4
Step 26 : ENV WPS_VERSION 3.3.1
 ---> Using cache
 ---> 815515139f67
Step 27 : COPY wps/$WPS_VERSION/wps.war /tmp/
 ---> Using cache
 ---> d553b1c02e95
Step 28 : RUN mkdir -p /usr/share/tomcat7-wps &&    unzip -d /usr/share/tomcat7-wps/wps /tmp/wps.war &&    rm /tmp/wps.war
 ---> Using cache
 ---> 38a28da7edf0
Step 29 : COPY wps/$WPS_VERSION/wps-$WPS_VERSION-geotools-package.zip /usr/share/tomcat7-wps/wps/
 ---> Using cache
 ---> f2646ca8cf8d
Step 30 : WORKDIR /usr/share/tomcat7-wps/wps
 ---> Using cache
 ---> 917ec4c63d3c
Step 31 : RUN unzip -o wps-$WPS_VERSION-geotools-package.zip
 ---> Using cache
 ---> 09cef1dd8218
Step 32 : COPY wps/$WPS_VERSION/wps_config_geotools.xml /usr/share/tomcat7-wps/wps/config/wps_config_geotools.xml
 ---> Using cache
 ---> 5a3de4d83d80
Step 33 : COPY wps/$WPS_VERSION/wps_config.xml /usr/share/tomcat7-wps/wps/config/wps_config.xml
 ---> Using cache
 ---> a3e5f0681131
Step 34 : COPY wps.xml /etc/tomcat7/Catalina/localhost/wps.xml
 ---> Using cache
 ---> 9c57c7389f81
Step 35 : RUN mkdir /usr/local/wps_grass_bridge
 ---> Using cache
 ---> 5733a458b72d
Step 36 : WORKDIR /usr/local/wps_grass_bridge
 ---> Using cache
 ---> 3bae1c0e6508
Step 37 : COPY wps/wps-grass-bridge-patched.zip /usr/local/wps_grass_bridge/
 ---> Using cache
 ---> 8b26b4517303
Step 38 : RUN unzip wps-grass-bridge-patched.zip &&    rm wps-grass-bridge-patched.zip &&    mkdir -p /var/grass/tmp
 ---> Using cache
 ---> ebb09133fc3c
Step 39 : RUN ln -s /usr/lib/python2.7/plat-*/_sysconfigdata_nd.py /usr/lib/python2.7/
 ---> Using cache
 ---> 017ec15b2445
Step 40 : RUN chown -R tomcat7:tomcat7 /usr/local/wps_grass_bridge &&    chown tomcat7:tomcat7 /var/grass/tmp &&    chown -R tomcat7:tomcat7 /usr/share/tomcat7-wps/wps
 ---> Using cache
 ---> 2336570509fa
Step 41 : COPY wps/logback_debug.xml /usr/share/tomcat7-wps/wps/WEB-INF/classes/logback.xml
 ---> Using cache
 ---> b6a0bd82e57d
Step 42 : RUN cd /usr/share/tomcat7-wps/ &&    mv wps wpshome
 ---> Using cache
 ---> 81ae50ec19c1
Step 43 : ENV CATALINA_OPTS -Xmx2048m -Xms48m -XX:MaxPermSize=512m
 ---> Using cache
 ---> ceed90b165c4
Step 44 : WORKDIR /var/grass/tmp
 ---> Using cache
 ---> 8495ec0b284a
Step 45 : EXPOSE 8080
 ---> Using cache
 ---> fd8c0a133826
Step 46 : VOLUME  ["/var/log/tomcat7", "/var/log/supervisor", "/var/grass/tmp"]
 ---> Using cache
 ---> 740db8ab1d90
Step 47 : COPY startup.sh /usr/share/tomcat7-wps/startup.sh
 ---> Using cache
 ---> eb1f66175f29
Step 48 : RUN chmod +x /usr/share/tomcat7-wps/startup.sh
 ---> Using cache
 ---> b6ccaa31a75c
Step 49 : CMD ["/usr/share/tomcat7-wps/startup.sh"]
 ---> Using cache
 ---> 2d4160e70ca4
Successfully built 2d4160e70ca4
